<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Guess the Number Game</title>
    <!-- Load Tailwind CSS for modern styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom styles for a better look */
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f4f8; /* Light blue-gray background */
        }
        .card {
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }
        .card:hover {
            transform: translateY(-5px);
        }
        .btn-primary {
            transition: background-color 0.2s ease, transform 0.1s ease;
        }
        .btn-primary:active {
            transform: scale(0.98);
        }
        /* Style for the custom message box */
        #message-box {
            min-height: 4.5rem; /* Ensure consistent height */
        }
    </style>
</head>
<body class="p-4 md:p-8 min-h-screen flex items-center justify-center">

    <!-- Game Container Card -->
    <div class="card bg-white p-6 md:p-10 rounded-xl w-full max-w-sm border-t-4 border-indigo-600">
        
        <h1 class="text-3xl font-bold text-gray-800 mb-2 text-center">‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h1>
        <p class="text-sm text-gray-500 mb-6 text-center">‡ßß ‡¶•‡ßá‡¶ï‡ßá ‡ßß‡ß¶‡ß¶-‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡•§</p>

        <!-- Display Area for Messages and Attempts -->
        <div id="message-box" class="bg-indigo-100 border-l-4 border-indigo-500 text-indigo-800 p-4 rounded-lg mb-6">
            <p id="message" class="font-medium text-lg">‡¶ó‡ßá‡¶Æ‡¶ü‡¶ø ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§!</p>
            <p id="attempts-display" class="text-sm mt-1">‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ: ‡ß¶</p>
        </div>

        <!-- Input Section -->
        <div class="space-y-4">
            <input type="number" id="guess-input" placeholder="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶æ‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..." min="1" max="100"
                   class="w-full p-3 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 text-lg"
                   autofocus>
            
            <button id="check-button" onclick="checkGuess()"
                    class="btn-primary w-full bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-3 rounded-lg text-xl shadow-md shadow-indigo-300">
                ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
            </button>
            
            <button id="reset-button" onclick="startGame()"
                    class="w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-3 rounded-lg text-lg">
                ‡¶®‡¶§‡ßÅ‡¶® ‡¶ó‡ßá‡¶Æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®
            </button>
        </div>

    </div>

    <!-- JavaScript Game Logic -->
    <script>
        // Global variables for the game
        let secret_number;
        let attempts;
        const MIN_NUMBER = 1;
        const MAX_NUMBER = 100;

        // Get references to DOM elements
        const messageEl = document.getElementById('message');
        const attemptsEl = document.getElementById('attempts-display');
        const inputEl = document.getElementById('guess-input');
        const checkButton = document.getElementById('check-button');
        const messageBoxEl = document.getElementById('message-box');

        /**
         * ‡¶ó‡ßá‡¶Æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßá, ‡¶∞‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶Æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶è‡¶¨‡¶Ç ‡¶≠‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤ ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßá‡•§
         */
        function startGame() {
            // 1 ‡¶•‡ßá‡¶ï‡ßá 100 ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∞‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶Æ ‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®
            secret_number = Math.floor(Math.random() * (MAX_NUMBER - MIN_NUMBER + 1)) + MIN_NUMBER;
            attempts = 0;
            
            // UI ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
            inputEl.value = '';
            inputEl.disabled = false;
            checkButton.disabled = false;
            
            // ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
            updateMessage(`‡¶Ü‡¶Æ‡¶ø ${MIN_NUMBER} ‡¶•‡ßá‡¶ï‡ßá ${MAX_NUMBER} ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶≠‡¶æ‡¶¨‡¶õ‡¶ø‡•§`, 'bg-indigo-100 border-indigo-500 text-indigo-800');
            updateAttempts();
            console.log("Secret Number (For Debugging):", secret_number); // Debugging ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
        }

        /**
         * UI ‡¶è ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßç‡¶ü‡¶æ‡¶á‡¶≤ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßá
         * @param {string} text - ‡¶™‡ßç‡¶∞‡¶¶‡¶∞‡ßç‡¶∂‡¶ø‡¶§ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡•§
         * @param {string} className - ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶¨‡¶ï‡ßç‡¶∏‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Tailwind ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡•§
         */
        function updateMessage(text, className) {
            messageEl.textContent = text;
            messageBoxEl.className = `p-4 rounded-lg mb-6 border-l-4 ${className}`;
        }

        /**
         * UI ‡¶è ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßá
         */
        function updateAttempts() {
            attemptsEl.textContent = `‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ: ${attempts}`;
        }

        /**
         * ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶æ‡¶® ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶¨‡¶Ç ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶™‡ßç‡¶∞‡¶¶‡¶∞‡ßç‡¶∂‡¶® ‡¶ï‡¶∞‡ßá‡•§
         */
        function checkGuess() {
            const guess = parseInt(inputEl.value);

            // ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡¶ø‡¶°‡ßá‡¶∂‡¶®
            if (isNaN(guess) || guess < MIN_NUMBER || guess > MAX_NUMBER) {
                updateMessage(`‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ${MIN_NUMBER} ‡¶è‡¶¨‡¶Ç ${MAX_NUMBER}-‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßà‡¶ß ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§`, 'bg-red-100 border-red-500 text-red-800');
                inputEl.value = ''; // ‡¶≠‡ßÅ‡¶≤ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ 
                return;
            }

            attempts++;
            updateAttempts();

            if (guess < secret_number) {
                updateMessage("‚¨áÔ∏è ‡¶Ö‡¶®‡ßá‡¶ï ‡¶ï‡¶Æ! ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡¶°‡¶º ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", 'bg-yellow-100 border-yellow-500 text-yellow-800');
            } else if (guess > secret_number) {
                updateMessage("‚¨ÜÔ∏è ‡¶Ö‡¶®‡ßá‡¶ï ‡¶¨‡ßá‡¶∂‡¶ø! ‡¶è‡¶ï‡¶ü‡¶ø ‡¶õ‡ßã‡¶ü ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶æ‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", 'bg-yellow-100 border-yellow-500 text-yellow-800');
            } else {
                // ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞
                updateMessage(`üéâüéâüéâ ‡¶Ö‡¶≠‡¶ø‡¶®‡¶®‡ßç‡¶¶‡¶®! ${attempts} ‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ‡ßü ‡¶Ü‡¶™‡¶®‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø (${secret_number}) ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶æ‡¶® ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§`, 'bg-green-100 border-green-500 text-green-800');
                
                // ‡¶ó‡ßá‡¶Æ ‡¶∂‡ßá‡¶∑
                inputEl.disabled = true;
                checkButton.disabled = true;
            }
            
            // ‡¶∏‡¶†‡¶ø‡¶ï ‡¶®‡¶æ ‡¶π‡¶≤‡ßá, ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶¨‡¶ï‡ßç‡¶∏‡¶ü‡¶ø ‡¶™‡¶∞‡¶ø‡¶∑‡ßç‡¶ï‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®
            if (guess !== secret_number) {
                inputEl.value = '';
            }
            inputEl.focus(); // ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶´‡ßã‡¶ï‡¶æ‡¶∏ ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®
        }

        // ‡¶è‡¶®‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡ßÄ ‡¶ö‡¶æ‡¶™‡¶≤‡ßá ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶æ‡¶® ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡¶ø‡¶∏‡ßá‡¶®‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
        inputEl.addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !checkButton.disabled) {
                checkGuess();
            }
        });

        // ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡¶¨‡¶æ‡¶∞ ‡¶ó‡ßá‡¶Æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®
        window.onload = startGame;
    </script>
</body>
</html>
